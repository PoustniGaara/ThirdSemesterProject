@model WebAppMVC.ViewModels.ProductDetailsVM


<div>
    <hr />
    <div class="col-sm-6 product-picture">
        <img src="~/images/@(Model.Id).jpg" class="product-image">
    </div>
    <div class="col-sm-6 product-info">
        <div class="product-title">
            <h2>@Html.DisplayFor(model => model.Name)</h2>
        </div>
        <div class="product-category">
            <span>@Html.DisplayFor(model => model.Category)</span>
        </div>
        <div class="product-price">
            <p>@Html.DisplayFor(model => model.Price) DKK</p>
        </div>
        <div class="product-description">
            <p>@Html.DisplayFor(model => model.Description)</p>
        </div>
        <div class="product-sizes-container">
            <p>Sizes</p>
            @foreach (var sizestock in Model.ProductSizeStocks)
            {
                <div class="sizes"><span class="sizeName">@sizestock.Size</span></div>
            }
        </div>
        <br />
        <div >
            <button type="button" class="btn add-to-cart-btn">@Html.ActionLink("Add to Cart", "Add", new {Model.Id})</button>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to Products</a>
</div>

<script>
    var sizeDivElements = document.querySelectorAll("div.sizes");
    for (const sizeButton of sizeDivElements) {
        sizeButton.addEventListener('click',
            function sizeClicked(event) {
                unselectSizes();
                this.classList.toggle("selected");
                const url = new URL(window.location);
                url.searchParams.set('size', this.querySelector("span.sizeName").innerText);
                window.history.pushState(null, '', url.toString());
        });
    }

    function unselectSizes() {
        for (const selectedSizes of sizeDivElements) {
            selectedSizes.classList.remove("selected");
        }
    }
</script>
