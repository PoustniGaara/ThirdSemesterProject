@model WebAppMVC.ViewModels.ProductDetailsVM

<div>
    <hr />
    <div class="col-sm-6 product-picture">
        <img src="~/images/@(Model.Id).jpg" class="product-image">
    </div>
    <div class="col-sm-6 product-info">
        <div class="product-title">
            <h2>@Html.DisplayFor(model => model.Name)</h2>
        </div>
        <div class="product-category">
            <span>@Html.DisplayFor(model => model.Category)</span>
        </div>
        <div class="product-price">
            <p>@Html.DisplayFor(model => model.Price) DKK</p>
        </div>
        <div class="product-description">
            <p>@Html.DisplayFor(model => model.Description)</p>
        </div>
        <div class="product-sizes-container">
            <p>Sizes</p>
            @foreach (var sizestock in Model.ProductSizeStocks)
            {
                <div class="sizes"><span class="sizeName">@sizestock.Size</span></div>
            }           
        </div>
        <div class="add-to-cart-container">
            <button type="button" id="add-to-cart-button" class="btn-primary" onclick="AddToCart()">
                <a id="add-to-cart-button-link">Add to cart</a>
            </button>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to Products</a>
</div>

<script>
    var sizeDivElements = document.querySelectorAll("div.sizes");
    var size = "";
    const thePath = window.location.href;
    const addToCartButton = document.getElementById('add-to-cart-button');
    addToCartButton.disabled = true;
    var addToCartLink = document.getElementById('add-to-cart-button-link');
    addToCartLink.textContent = "Select a size";
    const productId = thePath.substring(thePath.lastIndexOf('/') + 1);               

    for (const sizeButton of sizeDivElements) {
        sizeButton.addEventListener('click',
            function sizeClicked(event) {
                unselectSizes();
                this.classList.toggle("selected");
                size = this.querySelector("span.sizeName").innerText;
                addToCartLink.href = "/Product/Add/" + thePath.substring(thePath.lastIndexOf('/') + 1) + "?size=" + size;
                addToCartButton.disabled = false;
        });
    }
    
    function AddToCart(){
        @*/Product/Add/5?size=L"*@
        window.open("/Product/Add/" + thePath.substring(thePath.lastIndexOf('/') + 1) + "?size=" + size, "_self");
        @*document.getElementById("add-to-cart-link").setAttribute("onclick", "window.open('/Product/Add/" + thePath.substring(thePath.lastIndexOf('/') + 1) + "?size=" + size +"')");*@
    }

    function unselectSizes() {
        for (const selectedSizes of sizeDivElements) {
            selectedSizes.classList.remove("selected");
        }
    }
</script>
